# basic utils
from tqdm import tqdm
import tap
import numpy as np
import os
# deep learning stuff
import torch
import torch.nn as nn
from torch.nn import functional as F
# project-specific
from Utils.utils import set_seed
from Preprocess.dataset import Dataset

class Arguments(tap.Tap):
    data_dir = "/home/ubuntu/workspace/test_data/"
    seed: int = 2
    tasks = ("push_buttons",)
    cameras = ("left_shoulder", "right_shoulder", "wrist")
    output = data_dir + "datasets"
    max_variations: int = 3
    specific_vars: str = '5 8 11 14 17 '
    offset: int = 0
    num_workers: int = 4

if __name__ == "__main__":
    args = Arguments()
    set_seed(args.seed)
    args.specific_vars = [ int(x) for x in args.specific_vars.split() ]
    if os.path.exists(args.output) is False:
        os.mkdir(args.output)
    # load the episodes generated by RLbench
    dataset = Dataset(args)
    dataloader = torch.utils.data.DataLoader(
        dataset,
        batch_size=1,
        num_workers=args.num_workers,
        collate_fn=lambda x: x,
    )

    # iterating the dataload so that each asmple is processed and saved.
    for _ in tqdm(dataloader):
        continue